ip = "127.0.0.1";

# To connect a client to bip, try the port below, and
# be sure to set the password to the value
# specified in the network you want to connect to.
port = 7778;

# If you set this to true, you'll only be able to connect to bip
# with a SSL capable IRC client. Be sure to generate a certificate
# for bip with 'make cert'
#client_side_ssl = false;

log_level = 3;

#pid_file="/home/ubuntu/bip.pid";

# This is where logs go. Channel and private messages will use that
# configuration value as a prefix, and then log_format to determine
# full log filename.
log_root = "/home/ubuntu/bip_logs/";

# Log format allows you to make log filenames depend on the log line's
# attributes. Here's a list :
# %u -> user name
# %n -> network name
# %Y -> 4 digit year
# %m -> 2 digit month
# %d -> 2 digit day
# %c -> destination (#chan, privates, ...)
log_format = "%n/%Y/%m/%d/%c.log";

# Sets the frequency (in seconds) of log syncing (real write to kernel)
log_sync_interval = 5;

# Makes bip send the log of each channel and privates while
# you were not connected to the proxy upon connection.
backlog = true;         # enable backlog
backlog_lines = 0;              # number of lines in backlog, 0 means no limit
backlog_always = false;         # backlog even lines already backlogged
backlog_msg_only = true;

# If blreset_on_talk talking on an irc network has the same effect of issuing
# /bip blreset, meaning that stuffed logged before the command won't be read
# back on backlog
#blreset_on_talk = false;
blreset_on_talk = true;
backlog_reset_on_talk = true;

network {
        name = "freenode";
        server { host = "irc.freenode.net"; port = 6667; };
};

network {
  name = "XXX";
  ssl = true;
  server { host = "XXX"; port = XXX; };
};



# Configuration example with one user who connects to two irc networks
# To use the multi-server feature:
#  - define the connections
#  - chose and setup a different login for each connection
# on your irc client:
#  - Use the multi server feature of your client, the server beeing each time
#    the server where bip is running. In your client setup server password to:
#      username:password:connectionname
#  - do not store the password in clear here, use the bipmkpw util to generate
# a hash

# User structure is grouping information for a given user
user {
        # The name in bip of the user
        # This is used by bip only
        name = "gmason";
        # this user's password (md5(md5("tata"))) with seed - generated by bipmkpw
        password = "XXX";

        # SSL certificates checking mode for user:
        # - "none" to accept anything;
        # - "basic" to accept if the certificate is contained in the store;
        # In "basic" mode, encountered untrusted certificates can be added to
        # the store interactively by connecting a client and "trusting" them.
        # - "ca" to do a complete certificate chain checking with the objects
        # in the store below (you have to put in it every cert, CRL, up to the
        # root CA). You have to build your store manually, so you may prefer
        # using "basic" unless you're a crypto zealot...
        ssl_check_mode = "none";

        # Location of the user's store for SSL certificate check
        # In "basic" mode, that must point to a single file with all trusted
        # certs concatenated together (the interactive "trust" appends to this
        # file).
        # In "ca" mode, it's a directory of a standard openssl store; you must
        # put PEM objects (certificates, CRLs...) with .pem extension and run
        # `c_rehash .' in it
        # ssl_check_store = "/home/bip`debian/.bip/trustedcerts.txt";

        # These will be the default for each connections
        default_nick = "nodoubleg";
        default_user = "gmason";
        default_realname = "Greg Mason";

        # A user can have mutiple connections to irc networks.
        # define a connection:

        connection {
                name = "freenode";              # used by bip only
                network = "freenode";   # which ircnet to connect to

                # Some options:
                #follow_nick = true;
                ignore_first_nick = true;
                no_client_away_msg = "currently disconnected";
                #Optional - if you have your ID password protected:
                on_connect_send = "PRIVMSG NickServ IDENTIFY XXX";

                # Autojoined channels:
                channel { name = "#canonical-sysadmin"; };
                channel { name = "#ubuntu-mirrors"; };
                channel { name = "#ubuntu-server"; };
                channel { name = "#ubuntu-solutions"; };
                channel { name = "#ubuntu-us-mi"; };
                channel { name = "#openzfs"; };
                channel { name = "#zfs"; };
                channel { name = "#zfsonlinux"; };
    channel { name = "#XXX"; key = "XXX"; };
        };
  connection {
    name = "XXX";
    network = "XXX";
    password = "XXX";
    channel { name = "#,#,#"; };
  };

};
